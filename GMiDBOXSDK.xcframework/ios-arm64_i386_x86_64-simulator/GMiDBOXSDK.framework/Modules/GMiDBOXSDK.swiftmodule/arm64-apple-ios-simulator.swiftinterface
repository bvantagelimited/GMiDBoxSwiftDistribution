// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Osize -module-name GMiDBOXSDK
import Foundation
@_exported import GMiDBOXSDK
import Network
import NetworkExtension
import Swift
public class CellularRequest {
  public var url: Foundation.URL?
  public var isRedirect: Swift.Bool
  public init(queryParameters: [Swift.String : Swift.String]?, headers: [Swift.String : Swift.String]?, connectTimeout: Foundation.TimeInterval, readTimeout: Foundation.TimeInterval)
  public class Builder {
    public init()
    public func addHeader(key: Swift.String, value: Swift.String)
    public func addQueryParam(key: Swift.String, value: Swift.String)
    public func setConnectTimeout(value: Foundation.TimeInterval)
    public func setReadTimeout(value: Foundation.TimeInterval)
    public func build() -> GMiDBOXSDK.CellularRequest
    @objc deinit
  }
  public func parseToURLComponents() -> Foundation.URLComponents?
  @objc deinit
}
@_hasMissingDesignatedInitializers public class CellularService {
  public var successCallback: ((GMiDBOXSDK.CellularResponse) -> Swift.Void)?
  public var failureCallback: ((GMiDBOXSDK.CellularException) -> Swift.Void)?
  @objc deinit
}
public protocol CellularCallback {
  func onSuccess(response: GMiDBOXSDK.CellularResponse)
  func onError(error: GMiDBOXSDK.CellularException)
  func continueRequest(_ url: Swift.String)
  func onLogs(_ log: Swift.String)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class CellularConfiguration : ObjectiveC.NSObject {
  final public let SDK_VERSION: Swift.String
  public var CELLULAR_READ_TIMEOUT: Swift.Double
  public var CELLULAR_CONNECT_TIMEOUT: Swift.Double
  public static let sharedInstance: GMiDBOXSDK.CellularConfiguration
  @objc deinit
}
@_hasMissingDesignatedInitializers public class CellularResponse {
  public var statusCode: Swift.Int
  public func getResponseData() -> Any
  @objc deinit
}
public struct CellularException : Swift.Error {
  public let errorMessage: Swift.String
  public let errorCode: Swift.Int
}
@_hasMissingDesignatedInitializers public class CellularServices {
  public static let sharedInstance: GMiDBOXSDK.CellularServices
  public func requestTo(url: Swift.String, cellularRequest: GMiDBOXSDK.CellularRequest? = nil, successCallback: @escaping ((GMiDBOXSDK.CellularResponse) -> Swift.Void), failureCallback: @escaping ((GMiDBOXSDK.CellularException) -> Swift.Void))
  @objc deinit
}
@_hasMissingDesignatedInitializers public class ConnectionManager {
  public static func getInterface(host: Swift.String) -> (Swift.String?, Swift.String?, Swift.UnsafeMutablePointer<Darwin.sockaddr>?)
  public static func checkOnly3G() -> (Swift.Bool, Swift.Bool)
  @objc deinit
}
